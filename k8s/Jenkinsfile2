        def getBuildNumber(Integer build_number,String applicationName){
            def searchBuildNumber = null
            try {
                sh "helm list | grep '$applicationName-build$build_number'"
                return build_number
            } catch (Exception e) {
                getBuildNumber(build_number-1,applicationName)
            }
        }

        def checkoutApp(String githubRepository, String credentialsId, String githubBranch){
            checkout([
                $class: 'GitSCM', 
                branches: [[name: githubBranch]], 
                doGenerateSubmoduleConfigurations: false, 
                extensions: [], 
                submoduleCfg: [], 
                userRemoteConfigs: [[
                    credentialsId: credentialsId,   
                    url: githubRepository
                ]]
            ])
        }

        def buildImagePush(String dockerRegistryUrl, String credentialsId, String dockerImage){
            def appImg
            script {
                docker.withRegistry(dockerRegistryUrl,credentialsId){
                    appImg = docker.build(dockerImage,'.')
                    appImg.push()
                }
            }
        }

        def helmAddRepo(String chartMuseumUrl){
            sh "helm repo add chartmuseum $chartMuseumUrl"
            sh "helm repo update"
        }

        def installKubectl(){
            sh "curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl"
            sh "chmod +x ./kubectl"
        }

        def deployApp(String credentialsId,String serverUrl,Integer latestBuildNumber,Integer initialDelaySeconds, String applicationName, String chartMuseumUrl, String chartName){
            withKubeConfig(
                credentialsId: credentialsId,   
                serverUrl: serverUrl){
                helmAddRepo(chartMuseumUrl)
                temp = latestBuildNumber
                latestBuildNumber = 4
                // buildNumberBefore = getBuildNumber(latestBuildNumber-1,applicationName)

                // sh "helm uninstall $applicationName-build$buildNumberBefore"
                try{
                    sh "helm upgrade --set timestamp=$temp --set application.buildNumber=build$latestBuildNumber --set application.initialDelaySeconds=$initialDelaySeconds $applicationName-build$latestBuildNumber $chartName"
                    // sh "helm install --set application.buildNumber=build$latestBuildNumber --set application.initialDelaySeconds=$initialDelaySeconds $applicationName-config $chartName-config"
                    return null
                }catch(Exception e){
                    sh "helm install --set application.buildNumber=build$latestBuildNumber --set application.initialDelaySeconds=$initialDelaySeconds $applicationName-build$latestBuildNumber $chartName"
                    // sh "helm install $applicationName-curl-test chartmuseum/curl-test"
                    // buildNumberBefore = getBuildNumber(latestBuildNumber-1,applicationName)
                    return null
                    // return buildNumberBefore
                }
            }
        }

        node{
            def applicationUrl = 'http://10.199.16.58:31380/'
            def initialDelaySeconds = '60'
            def applicationName = 'shorten-app'
            def appPodLogs,buildNumberBefore
            def latestBuildNumber = "${BUILD_NUMBER}"

            def kubernetesCredentialsId = 'a41714cc-37ed-4342-bf16-7b82fb1d0282'
            def kubernetesServerUrl = 'https://k8s.its.ac.id:20443/k8s/clusters/c-z2f4w'
        
            def chartMuseumUrl = 'http://10.199.16.58:32357'
            def chartName = 'chartmuseum/shorten-app'
        
            def dockerImage = 'mailsyarief/its-url-shortener:development'
            def dockerRegistryUrl = 'https://registry.hub.docker.com'
            def dockerRegistryCredentialsId = '1dec2836-f788-4836-9e0b-da6da82bd4fb'


            def githubRepository = 'https://github.com/mailsyarief/its-url-shortener.git'
            def githubCredentialsId = '03816473-9107-4d36-80c1-8d80f0a4f1e0'
            def githubBranch = '*/development'

            stage('Checkout app'){
                checkoutApp(
                    githubRepository as String,
                    githubCredentialsId as String,
                    githubBranch as String
                )
            }
            stage('Build Image & Push to Docker Registry'){
                buildImagePush(
                    dockerRegistryUrl as String,
                    dockerRegistryCredentialsId as String,
                    dockerImage as String
                )
            }
            stage('Deploy Application & Configuration to Kubernetes Cluster') {
                buildNumberBefore = deployApp(
                    kubernetesCredentialsId as String,
                    kubernetesServerUrl as String,
                    latestBuildNumber as Integer,
                    initialDelaySeconds as Integer,
                    applicationName as String,
                    chartMuseumUrl as String,
                    chartName as String
                )
            }
            stage('Waiting for Deployed Application to be ready'){
                // Konfigurasi Istio
            }
            stage('Deploy Virtual Service (Istio Configuration)'){
                // Konfigurasi Istio
            }
            stage('remove cache') {
                dir(".") {
                    sh 'docker image prune --all'
                }
            }
        }
